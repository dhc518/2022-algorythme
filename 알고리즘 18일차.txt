잡합 커버 문제
	문제
		n개의 원소를 가진 집합 U가 있고 U의 부분집합들을 원소로 하는 집합 F가 주어질 때,
		F의 원소들인 집합들중에서 어떤 집합들을 선택하여 합집하면 U와 같게 되는가

신도시 계획문제를 집합 커버 문제로 변환
	10개의 마을이 신도시에 만들어질 계획
	조건
		학교는 마을에 위치
		들교거리는 걸어서 15분 이내여야 한다
	어느 마을에 학교를 신설해야 학교 수가 최소가 되는 가?

F에 n개의 집합들이 있다고 가정
F에 있는 집랍들의 모든 조합을 1개씩 합집합하여 U가 되는지 확인

n개의 원소가 있을 경우
	최대 ((2^n)-1)개를 검사해야함
	n이 커지면 최적해를 찾는 것은 실질적 불가
	최적해를 찾는 대신에 최적해에 근접한 근사해를 찾는다.

Set Cover(정점이 정점을 커버하는 알고리즘)
1. C = null
2, while U != null
3, U의 원소를 가장 많이 가진 집합 S를 F에서 선택
4. U = U -S
5. S를 F에서 제거하고, S를 C에 추가
return C

동적 계회 알고리즘(DP)
	입력 크기가 작은 부분 문들을 해결한 후에 
	그 해들을 이용하여 큰 문제의 해를 구하는 방법

분할 정복 과의 차이점
	더 작은 크기의 문제가 어디에 이용될 지 모르기 떄문에 더 작은 문제의 해를 미리 구해야 한다.
	부분 문제들간에 의존적 관계가 존재

플로이드 워샬 알고리즘
	a,b,c 세 점이 있을 떄, a에서 c로 가는 경로를 알고있을때, b를 거치는 결로가 더 짧다면 b로 갱긴

for k = 1 to n
	for i = 1 to n (i 1=k)
		for j= 1 to n(j!=k,j!=i)
			D[i,j] = min { D[i,k]+D(k,j),D(i,j)}
D(ij)(k)
주의!! 점 1에서 점 k까지의 모든 점을 반드시 경유하는 경로를 의미하는 것이 아니다.
시간 복잡도 O(n^3)

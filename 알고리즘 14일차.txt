그리디 알고리즘

  최적화문제 
  가능한 해들 중에서 가장 좋은 해를 찾는 문제
  입력데이터 간의 관계를 고려하지 않고 수행 과정에서 최소값 또는 최대값을 가진 데이터 선택
  일단 한 번 선택하면, 이를 절대로 번복하지 않는다.
  매우 단순, 제한적인 문제만 해결
  
  weight/distance 가중치/거리
  edge list:
  
  
  4.1 동전 거스름돈
    가장 큰 액면의 동전을 취하는 것
    특정 조건에서만 활용가능한 알고리즘
  
  4.2 최소 신장 트리 MST
    사이클이 없도록 모든 점을 연결시킨다.
    버텍스의 수 n
    간선 수 n-1
    트리에 간선을 하나 추가시키면 반드시 순환하게 된다.
    
    Kruskal 알고리즘
      가중치가 가장 작은 간선이 사이클을 만들지 않을 때에만 욕심내어 그 간선을 추가시킨다.
      
      1. 가중치의 오름 차순으로 간선들을 정렬 L = 정렬된 간선 리스트
      2. T = 공집합 // 트리 T 초기화
      3. while (T의 간선수ㅡ n-1)
      4.  L에서 가장 작은 가중치를 가진 간선 e 를 가져오고, e를 L에서 제거
      5.  if 간선 e가  T에 추가 되어 사이클을 만들지 않으
      6.     e를 T에 추가
      7.  else
      
      시간 복잡도 
      m 간선의 수
      O(mlogm)
      
      프림 아고리즘 
      임의의 점 하나를 선택한 후 n-1 개의 간선을 하씩 추가시켜 트리를 만든다.
      
      
  
  4.3 최단 결로 찾기
  
  
  4.4 부분 배낭 문제
  
  
  4.5 집합 커버 문제
  
  
  4.6 작업 스케줄링
  
  
  4.7 허프만 압축
